{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte",
    "Space.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import Space from \"./Space.svelte\";\n  import gameStore from \"./game-store.js\";\n  import { nextMove, reset } from \"./request.js\";\n  let board = [\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\"];\n  let nextPlayer = \"\";\n  let winner;\n  let numberOfPeeps = 0;\n  let errorMessage;\n  gameStore.subscribe((data) => {\n    if (!data) {\n      return;\n    }\n\n    winner = data.winner;\n    nextPlayer = data.nextPlayer;\n    board = data.board;\n    numberOfPeeps = data.numberOfPeeps;\n  });\n\n  async function takeSpace(space) {\n    if (winner) {\n      return;\n    }\n\n    if (!gameStore.isConnected) {\n      return;\n    }\n\n    errorMessage = await nextMove(space);\n  }\n\n  async function newGame () {\n    errorMessage = await reset()\n  }\n</script>\n\n<style>\n  main {\n    width: 475px;\n    margin: 0 auto;\n    height: 1080px;\n  }\n  .row {\n    display: flex;\n  }\n  button {\n    width: 100%;\n    margin-top: 20px;\n    border-radius: 0;\n    font-size: 30px;\n    background-color: lightblue;\n    cursor: pointer;\n  }\n  button:hover {\n    outline: none;\n  }\n  .errorMessage {\n    color: red;\n    font-size: 20px;\n  }\n</style>\n\n<main>\n  <h1>Tic Tac Toe</h1>\n  <h2>Number of people playing: {numberOfPeeps}</h2>\n  {#if winner == 'TIE'}\n    <h2>Tie game</h2>\n  {:else if winner}\n    <h2>Player {winner} won</h2>\n  {:else}\n    <h2>Player {nextPlayer}</h2>\n  {/if}\n  <div class=\"row\">\n    <Space {winner} space={board[0]} on:click={() => takeSpace(0)} />\n    <Space {winner} space={board[1]} on:click={() => takeSpace(1)} />\n    <Space {winner} space={board[2]} on:click={() => takeSpace(2)} />\n  </div>\n  <div class=\"row\">\n    <Space {winner} space={board[3]} on:click={() => takeSpace(3)} />\n    <Space {winner} space={board[4]} on:click={() => takeSpace(4)} />\n    <Space {winner} space={board[5]} on:click={() => takeSpace(5)} />\n  </div>\n  <div class=\"row\">\n    <Space {winner} space={board[6]} on:click={() => takeSpace(6)} />\n    <Space {winner} space={board[7]} on:click={() => takeSpace(7)} />\n    <Space {winner} space={board[8]} on:click={() => takeSpace(8)} />\n  </div>\n  {#if winner}<button on:click={newGame}>New Game</button>{/if}\n  {#if errorMessage}\n    <p class=\"errorMessage\">Error</p>\n  {/if}\n</main>\n",
    "<script>\n  export let space = \"\";\n  export let winner;\n  $: won = space === winner;\n</script>\n\n<style>\n  .space {\n    border: solid 1px gray;\n    height: 125px;\n    width: 125px;\n    flex: 1;\n    font-size: 75px;\n    text-align: center;\n    line-height: 125px;\n    cursor: pointer;\n  }\n  .winning {\n    color: purple;\n  }\n</style>\n\n<div class:winning={won} on:click class=\"space\">{space}</div>\n"
  ],
  "names": [],
  "mappings": "AAsCE,IAAI,eAAC,CAAC,AACJ,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,MAAM,AAChB,CAAC,AACD,IAAI,eAAC,CAAC,AACJ,OAAO,CAAE,IAAI,AACf,CAAC,AACD,MAAM,eAAC,CAAC,AACN,KAAK,CAAE,IAAI,CACX,UAAU,CAAE,IAAI,CAChB,aAAa,CAAE,CAAC,CAChB,SAAS,CAAE,IAAI,CACf,gBAAgB,CAAE,SAAS,CAC3B,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,qBAAM,MAAM,AAAC,CAAC,AACZ,OAAO,CAAE,IAAI,AACf,CAAC,AACD,aAAa,eAAC,CAAC,AACb,KAAK,CAAE,GAAG,CACV,SAAS,CAAE,IAAI,AACjB,CAAC;ACrDD,MAAM,eAAC,CAAC,AACN,MAAM,CAAE,KAAK,CAAC,GAAG,CAAC,IAAI,CACtB,MAAM,CAAE,KAAK,CACb,KAAK,CAAE,KAAK,CACZ,IAAI,CAAE,CAAC,CACP,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,WAAW,CAAE,KAAK,CAClB,MAAM,CAAE,OAAO,AACjB,CAAC,AACD,QAAQ,eAAC,CAAC,AACR,KAAK,CAAE,MAAM,AACf,CAAC"
}